#Constants
{{$NODES_PER_NAMESPACE := 100}}
{{$PODS_PER_NODE := 30}}
#Variables
{{$totalPods := MultiplyInt $PODS_PER_NODE .Nodes}}
{{$namespaces := DivideInt (SubtractInt .Nodes 1) $NODES_PER_NAMESPACE | AddInt 1}}
{{$replicas := DivideInt $totalPods $namespaces}}
{{$totalPodsRounded := MultiplyInt $namespaces $replicas}}
#Test
name: density
automanagedNamespaces: {{$namespaces}}
tuningSets:
- name: Uniform100qps
  qpsLoad:
    qps: 100
- name: Uniform5qps
  qpsLoad:
    qps: 5
steps:
- measurements:
  - Identifier: PhaseTimer
    Method: Timer
    Params:
      label: Global
      action: start
  - Identifier: PhaseTimer
    Method: Timer
    Params:
      label: CreateSaturationPods
      action: start
  - Identifier: APIResponsiveness
    Method: APIResponsiveness
    Params:
      action: reset
  - Identifier: SchedulingMetrics
    Method: SchedulingMetrics
    Params:
      action: reset
# Create saturation pods
- phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: 1
    tuningSet: Uniform100qps
    objectBundle:
    - basename: saturation-rc
      objectTemplatePath: rc.yaml
      templateFillMap:
        Replicas: {{$replicas}}
        PodKind: saturationPod
- measurements:
  - Identifier: WaitForSaturationRunning
    Method: WaitForRunningPods
    Params:
      desiredPodCount: {{$totalPodsRounded}}
      labelSelector: kind = saturationPod
      # timeout = (totalPodsRounded /20)s + 3m
      timeout: {{DivideInt $totalPodsRounded 20 | AddInt 180}}s
- measurements:
  - Identifier: PhaseTimer
    Method: Timer
    Params:
      label: CreateSaturationPods
      action: stop
  - Identifier: PhaseTimer
    Method: Timer
    Params:
      label: CreateLatencyPods
      action: start
  - Identifier: PodStartupLatency
    Method: PodStartupLatency
    Params:
      action: start
      labelSelector: kind = latencyPod
# Create latency pods
- phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: {{DivideInt .Nodes $namespaces}}
    tuningSet: Uniform5qps
    objectBundle:
    - basename: latency-pod-rc
      objectTemplatePath: rc.yaml
      templateFillMap:
        Replicas: 1
        PodKind: latencyPod
- measurements:
  - Identifier: WaitForLatencyPodRunning
    Method: WaitForRunningPods
    Params:
      desiredPodCount: {{.Nodes}}
      labelSelector: kind = latencyPod
      timeout: 10m
- measurements:
  - Identifier: PhaseTimer
    Method: Timer
    Params:
      label: CreateLatencyPods
      action: stop
  - Identifier: PodStartupLatency
    Method: PodStartupLatency
    Params:
      action: gather
  - Identifier: PhaseTimer
    Method: Timer
    Params:
      label: DeleteAllPods
      action: start
# Delete pods
- phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: 0
    tuningSet: Uniform100qps
    objectBundle:
    - basename: saturation-rc
      objectTemplatePath: rc.yaml
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: 0
    tuningSet: Uniform100qps
    objectBundle:
    - basename: latency-pod-rc
      objectTemplatePath: rc.yaml
- measurements:
  - Identifier: APIResponsiveness
    Method: APIResponsiveness
    Params:
      action: gather
  - Identifier: SchedulingMetrics
    Method: SchedulingMetrics
    Params:
      action: gather
  - Identifier: PhaseTimer
    Method: Timer
    Params:
      label: DeleteAllPods
      action: stop
- measurements:
  - Identifier: PhaseTimer
    Method: Timer
    Params:
      label: Global
      action: stop
- measurements:
  - Identifier: PhaseTimer
    Method: Timer
    Params:
      action: gather
